// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: kpture/kpture.proto

package kapture

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Auxiliary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeUrl string `protobuf:"bytes,1,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	Value   []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Auxiliary) Reset() {
	*x = Auxiliary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kpture_kpture_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auxiliary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auxiliary) ProtoMessage() {}

func (x *Auxiliary) ProtoReflect() protoreflect.Message {
	mi := &file_kpture_kpture_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auxiliary.ProtoReflect.Descriptor instead.
func (*Auxiliary) Descriptor() ([]byte, []int) {
	return file_kpture_kpture_proto_rawDescGZIP(), []int{0}
}

func (x *Auxiliary) GetTypeUrl() string {
	if x != nil {
		return x.TypeUrl
	}
	return ""
}

func (x *Auxiliary) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type CaptureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp      int64        `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	CaptureLength  int64        `protobuf:"varint,2,opt,name=CaptureLength,proto3" json:"CaptureLength,omitempty"`
	Length         int64        `protobuf:"varint,3,opt,name=Length,proto3" json:"Length,omitempty"`
	InterfaceIndex int64        `protobuf:"varint,4,opt,name=InterfaceIndex,proto3" json:"InterfaceIndex,omitempty"`
	AncillaryData  []*Auxiliary `protobuf:"bytes,5,rep,name=AncillaryData,proto3" json:"AncillaryData,omitempty"`
}

func (x *CaptureInfo) Reset() {
	*x = CaptureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kpture_kpture_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptureInfo) ProtoMessage() {}

func (x *CaptureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kpture_kpture_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptureInfo.ProtoReflect.Descriptor instead.
func (*CaptureInfo) Descriptor() ([]byte, []int) {
	return file_kpture_kpture_proto_rawDescGZIP(), []int{1}
}

func (x *CaptureInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CaptureInfo) GetCaptureLength() int64 {
	if x != nil {
		return x.CaptureLength
	}
	return 0
}

func (x *CaptureInfo) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *CaptureInfo) GetInterfaceIndex() int64 {
	if x != nil {
		return x.InterfaceIndex
	}
	return 0
}

func (x *CaptureInfo) GetAncillaryData() []*Auxiliary {
	if x != nil {
		return x.AncillaryData
	}
	return nil
}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptureInfo *CaptureInfo `protobuf:"bytes,1,opt,name=CaptureInfo,proto3" json:"CaptureInfo,omitempty"`
	Data        []byte       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kpture_kpture_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_kpture_kpture_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_kpture_kpture_proto_rawDescGZIP(), []int{2}
}

func (x *Packet) GetCaptureInfo() *CaptureInfo {
	if x != nil {
		return x.CaptureInfo
	}
	return nil
}

func (x *Packet) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kpture_kpture_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_kpture_kpture_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_kpture_kpture_proto_rawDescGZIP(), []int{3}
}

type ReadyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready    bool     `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	NotReady []string `protobuf:"bytes,2,rep,name=notReady,proto3" json:"notReady,omitempty"`
}

func (x *ReadyRsp) Reset() {
	*x = ReadyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kpture_kpture_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyRsp) ProtoMessage() {}

func (x *ReadyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_kpture_kpture_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyRsp.ProtoReflect.Descriptor instead.
func (*ReadyRsp) Descriptor() ([]byte, []int) {
	return file_kpture_kpture_proto_rawDescGZIP(), []int{4}
}

func (x *ReadyRsp) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *ReadyRsp) GetNotReady() []string {
	if x != nil {
		return x.NotReady
	}
	return nil
}

type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kpture_kpture_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_kpture_kpture_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_kpture_kpture_proto_rawDescGZIP(), []int{5}
}

func (x *Pod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pod) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type PacketDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Packet *Packet `protobuf:"bytes,2,opt,name=Packet,proto3" json:"Packet,omitempty"`
}

func (x *PacketDescriptor) Reset() {
	*x = PacketDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kpture_kpture_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketDescriptor) ProtoMessage() {}

func (x *PacketDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_kpture_kpture_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketDescriptor.ProtoReflect.Descriptor instead.
func (*PacketDescriptor) Descriptor() ([]byte, []int) {
	return file_kpture_kpture_proto_rawDescGZIP(), []int{6}
}

func (x *PacketDescriptor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PacketDescriptor) GetPacket() *Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

var File_kpture_kpture_proto protoreflect.FileDescriptor

var file_kpture_kpture_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6b, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x6b, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3c,
	0x0a, 0x09, 0x41, 0x75, 0x78, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcb, 0x01, 0x0a,
	0x0b, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x61,
	0x70, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x38, 0x0a, 0x0d, 0x41, 0x6e, 0x63, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x75, 0x78, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x79, 0x52, 0x0d, 0x41, 0x6e, 0x63,
	0x69, 0x6c, 0x6c, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x54, 0x0a, 0x06, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3c, 0x0a, 0x08, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x37, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x22, 0x4f, 0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x32, 0x75, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x19,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x1a, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x27, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x0c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x6f, 0x64, 0x1a, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x4c, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x22, 0x00, 0x30, 0x01, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6d, 0x74, 0x73, 0x74, 0x65, 0x70, 0x68, 0x61, 0x6e, 0x65,
	0x2f, 0x6b, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kpture_kpture_proto_rawDescOnce sync.Once
	file_kpture_kpture_proto_rawDescData = file_kpture_kpture_proto_rawDesc
)

func file_kpture_kpture_proto_rawDescGZIP() []byte {
	file_kpture_kpture_proto_rawDescOnce.Do(func() {
		file_kpture_kpture_proto_rawDescData = protoimpl.X.CompressGZIP(file_kpture_kpture_proto_rawDescData)
	})
	return file_kpture_kpture_proto_rawDescData
}

var file_kpture_kpture_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kpture_kpture_proto_goTypes = []interface{}{
	(*Auxiliary)(nil),        // 0: service.Auxiliary
	(*CaptureInfo)(nil),      // 1: service.CaptureInfo
	(*Packet)(nil),           // 2: service.Packet
	(*Empty)(nil),            // 3: service.Empty
	(*ReadyRsp)(nil),         // 4: service.ReadyRsp
	(*Pod)(nil),              // 5: service.Pod
	(*PacketDescriptor)(nil), // 6: service.PacketDescriptor
}
var file_kpture_kpture_proto_depIdxs = []int32{
	0, // 0: service.CaptureInfo.AncillaryData:type_name -> service.Auxiliary
	1, // 1: service.Packet.CaptureInfo:type_name -> service.CaptureInfo
	2, // 2: service.PacketDescriptor.Packet:type_name -> service.Packet
	6, // 3: service.AgentService.AddPacket:input_type -> service.PacketDescriptor
	5, // 4: service.AgentService.Ready:input_type -> service.Pod
	3, // 5: service.ClientService.GetPackets:input_type -> service.Empty
	3, // 6: service.AgentService.AddPacket:output_type -> service.Empty
	3, // 7: service.AgentService.Ready:output_type -> service.Empty
	6, // 8: service.ClientService.GetPackets:output_type -> service.PacketDescriptor
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_kpture_kpture_proto_init() }
func file_kpture_kpture_proto_init() {
	if File_kpture_kpture_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kpture_kpture_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auxiliary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kpture_kpture_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kpture_kpture_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kpture_kpture_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kpture_kpture_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kpture_kpture_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kpture_kpture_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kpture_kpture_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_kpture_kpture_proto_goTypes,
		DependencyIndexes: file_kpture_kpture_proto_depIdxs,
		MessageInfos:      file_kpture_kpture_proto_msgTypes,
	}.Build()
	File_kpture_kpture_proto = out.File
	file_kpture_kpture_proto_rawDesc = nil
	file_kpture_kpture_proto_goTypes = nil
	file_kpture_kpture_proto_depIdxs = nil
}
